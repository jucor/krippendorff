// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// bootstrapWithinUnit
NumericVector bootstrapWithinUnit(NumericVector deviations, int nboot);
RcppExport SEXP _krippendorff_bootstrapWithinUnit(SEXP deviationsSEXP, SEXP nbootSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type deviations(deviationsSEXP);
    Rcpp::traits::input_parameter< int >::type nboot(nbootSEXP);
    rcpp_result_gen = Rcpp::wrap(bootstrapWithinUnit(deviations, nboot));
    return rcpp_result_gen;
END_RCPP
}
// countNominal
double countNominal(NumericVector n);
RcppExport SEXP _krippendorff_countNominal(SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(countNominal(n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_krippendorff_bootstrapWithinUnit", (DL_FUNC) &_krippendorff_bootstrapWithinUnit, 2},
    {"_krippendorff_countNominal", (DL_FUNC) &_krippendorff_countNominal, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_krippendorff(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
